// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: error.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenIM.Proto {

  /// <summary>Holder for reflection information generated from error.proto</summary>
  public static partial class ErrorReflection {

    #region Descriptor
    /// <summary>File descriptor for error.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ErrorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtlcnJvci5wcm90bxIQb3BlbmltLnNkay5lcnJvciqQCwoJRXJyb3JDb2Rl",
            "EgsKB05vRXJyb3IQABITCg5TZXJ2ZXJJbnRlcm5hbBD0AxIJCgRBcmdzEOkH",
            "EhEKDE5vUGVybWlzc2lvbhDqBxIRCgxEdXBsaWNhdGVLZXkQ6wcSEwoOUmVj",
            "b3JkTm90Rm91bmQQ7AcSEQoMVG9rZW5FeHBpcmVkEN0LEhEKDFRva2VuSW52",
            "YWxpZBDeCxITCg5Ub2tlbk1hbGZvcm1lZBDfCxIVChBUb2tlbk5vdFZhbGlk",
            "WWV0EOALEhEKDFRva2VuVW5rbm93bhDhCxIQCgtUb2tlbktpY2tlZBDiCxIS",
            "Cg1Ub2tlbk5vdEV4aXN0EOMLEg8KClNka05ldHdvcmsQkE4SFgoRU2RrTmV0",
            "d29ya1RpbWVvdXQQkU4SDAoHU2RrQXJncxCSThIbChZTZGtDdHhEZWFkbGlu",
            "ZUV4Y2VlZGVkEJNOEh8KGlNka1Jlc291cmNlTG9hZE5vdENvbXBsZXRlEJRO",
            "EhMKDlNka1Vua25vd25Db2RlEJVOEhAKC1Nka0ludGVybmFsEJZOEhQKD1Nk",
            "a0Z1bmNOb3RGb3VuZBCXThIPCgpTZGtOb3RJbml0EJhOEhAKC1Nka05vdExv",
            "Z2luEJlOEhYKEVNka1VzZXJJRE5vdEZvdW5kEPROEhAKC1Nka0xvZ2luT3V0",
            "EPVOEhMKDlNka0xvZ2luUmVwZWF0EPZOEhQKD1Nka0ZpbGVOb3RGb3VuZBDY",
            "TxIYChNTZGtNc2dEZUNvbXByZXNzaW9uENlPEhkKFFNka01zZ0RlY29kZUJp",
            "bmFyeVdzENpPEh8KGlNka01zZ0JpbmFyeVR5cGVOb3RTdXBwb3J0ENtPEhEK",
            "DFNka01zZ1JlcGVhdBDcTxIgChtTZGtNc2dDb250ZW50VHlwZU5vdFN1cHBv",
            "cnQQ3U8SEwoOU2RrTXNnSGFzTm9TZXEQ3k8SFQoQU2RrTm90U3VwcG9ydE9w",
            "dBC9UBIWChFTZGtOb3RTdXBwb3J0VHlwZRC+UBITCg5TZGtVbnJlYWRDb3Vu",
            "dBC/UBIXChJTZGtHcm91cElETm90Rm91bmQQoFESEQoMU2RrR3JvdXBUeXBl",
            "EKFREhYKEVNydlVzZXJJRE5vdEZvdW5kEM0IEhkKFFNydlJlZ2lzdGVyZWRB",
            "bHJlYWR5EM4IEhcKElNydkdyb3VwSUROb3RGb3VuZBCxCRIWChFTcnZHcm91",
            "cElERXhpc3RlZBCyCRIVChBTcnZOb3RJbkdyb3VwWWV0ELMJEhgKE1NydkRp",
            "c21pc3NlZEFscmVhZHkQtAkSGwoWU3J2R3JvdXBUeXBlTm90U3VwcG9ydBC1",
            "CRIbChZTcnZHcm91cFJlcXVlc3RIYW5kbGVkELYJEhkKFFNydkNhbk5vdEFk",
            "ZFlvdXJzZWxmEJUKEhUKEFNydkJsb2NrZWRCeVBlZXIQlgoSFgoRU3J2Tm90",
            "UGVlcnNGcmllbmQQlwoSGwoWU3J2UmVsYXRpb25zaGlwQWxyZWFkeRCYChId",
            "ChhTcnZNZXNzYWdlSGFzUmVhZERpc2FibGUQ+QoSFAoPU3J2TXV0ZWRJbkdy",
            "b3VwEPoKEhIKDVNydk11dGVkR3JvdXAQ+woSGAoTU3J2TXNnQWxyZWFkeVJl",
            "dm9rZRD8ChIbChZTcnZDb25uT3Zlck1heE51bUxpbWl0EMEMEhAKC1NydkNv",
            "bm5BcmdzEMIMEg8KClNydlB1c2hNc2cQwwwSGQoUU3J2SU9TQmFja2dyb3Vu",
            "ZFB1c2gQxAwSGwoWU3J2RmlsZVVwbG9hZGVkRXhwaXJlZBClDRIRCgtTcnZE",
            "YXRhYmFzZRCSvwUSEAoKU3J2TmV0d29yaxCUvwUSDQoHU3J2RGF0YRCXvwUS",
            "EQoLU3J2Q2FsbGJhY2sQgPEEQkpaNmdpdGh1Yi5jb20vb3Blbmltc2RrL29w",
            "ZW5pbS1zZGstY29yZS92My9wcm90by9nby9lcnJvcqoCDE9wZW5JTS5Qcm90",
            "b7oCAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::OpenIM.Proto.ErrorCode), }, null, null));
    }
    #endregion

  }
  #region Enums
  public enum ErrorCode {
    /// <summary>
    /// NoError is the zero value of ErrorCode.
    /// </summary>
    [pbr::OriginalName("NoError")] NoError = 0,
    /// <summary>
    /// Server internal error. Usually due to internal network issues. Check if all server nodes are running properly.
    /// </summary>
    [pbr::OriginalName("ServerInternal")] ServerInternal = 500,
    /// <summary>
    /// Server Args error. Need check body args and header args is correct.
    /// </summary>
    [pbr::OriginalName("Args")] Args = 1001,
    /// <summary>
    /// Server nno permission. Uaually header token is not correct or permission d.
    /// </summary>
    [pbr::OriginalName("NoPermission")] NoPermission = 1002,
    /// <summary>
    /// Server database duplicate key.
    /// </summary>
    [pbr::OriginalName("DuplicateKey")] DuplicateKey = 1003,
    /// <summary>
    /// Server database record not found.
    /// </summary>
    [pbr::OriginalName("RecordNotFound")] RecordNotFound = 1004,
    /// <summary>
    /// Server token expired.
    /// </summary>
    [pbr::OriginalName("TokenExpired")] TokenExpired = 1501,
    /// <summary>
    /// Server token invalid.
    /// </summary>
    [pbr::OriginalName("TokenInvalid")] TokenInvalid = 1502,
    /// <summary>
    /// Server token format error.
    /// </summary>
    [pbr::OriginalName("TokenMalformed")] TokenMalformed = 1503,
    /// <summary>
    /// Server token not valid yet.
    /// </summary>
    [pbr::OriginalName("TokenNotValidYet")] TokenNotValidYet = 1504,
    /// <summary>
    /// Server token unknown.
    /// </summary>
    [pbr::OriginalName("TokenUnknown")] TokenUnknown = 1505,
    /// <summary>
    /// Server token kicked, is invalid.
    /// </summary>
    [pbr::OriginalName("TokenKicked")] TokenKicked = 1506,
    /// <summary>
    /// Server token not exist.
    /// </summary>
    [pbr::OriginalName("TokenNotExist")] TokenNotExist = 1507,
    /// <summary>
    /// SDK network request error.
    /// </summary>
    [pbr::OriginalName("SdkNetwork")] SdkNetwork = 10000,
    /// <summary>
    /// SDK network timeout.
    /// </summary>
    [pbr::OriginalName("SdkNetworkTimeout")] SdkNetworkTimeout = 10001,
    /// <summary>
    /// SDK args error.
    /// </summary>
    [pbr::OriginalName("SdkArgs")] SdkArgs = 10002,
    /// <summary>
    /// SDK context deadline exceeded, usually user is logout.
    /// </summary>
    [pbr::OriginalName("SdkCtxDeadlineExceeded")] SdkCtxDeadlineExceeded = 10003,
    /// <summary>
    /// SDK resource load not complete, usually is not init or login interface will not callback success.
    /// </summary>
    [pbr::OriginalName("SdkResourceLoadNotComplete")] SdkResourceLoadNotComplete = 10004,
    /// <summary>
    /// SDK unknown error. Need check error msg find reason.
    /// </summary>
    [pbr::OriginalName("SdkUnknownCode")] SdkUnknownCode = 10005,
    /// <summary>
    /// SDK internal error. Need check error msg find reason.
    /// </summary>
    [pbr::OriginalName("SdkInternal")] SdkInternal = 10006,
    /// <summary>
    /// SDK func not found.
    /// </summary>
    [pbr::OriginalName("SdkFuncNotFound")] SdkFuncNotFound = 10007,
    /// <summary>
    /// SDK not init.
    /// </summary>
    [pbr::OriginalName("SdkNotInit")] SdkNotInit = 10008,
    /// <summary>
    /// SDK not login.
    /// </summary>
    [pbr::OriginalName("SdkNotLogin")] SdkNotLogin = 10009,
    /// <summary>
    /// SDK user id not exist or not register.
    /// </summary>
    [pbr::OriginalName("SdkUserIDNotFound")] SdkUserIdnotFound = 10100,
    /// <summary>
    /// SDK user login out.
    /// </summary>
    [pbr::OriginalName("SdkLoginOut")] SdkLoginOut = 10101,
    /// <summary>
    /// User repeated login. You can use `getloginstatus` to check user login status, avoid repeat login.
    /// </summary>
    [pbr::OriginalName("SdkLoginRepeat")] SdkLoginRepeat = 10102,
    /// <summary>
    /// SDK need upload file not found.
    /// </summary>
    [pbr::OriginalName("SdkFileNotFound")] SdkFileNotFound = 10200,
    /// <summary>
    /// SDK message decompression error.
    /// </summary>
    [pbr::OriginalName("SdkMsgDeCompression")] SdkMsgDeCompression = 10201,
    /// <summary>
    /// SDK message decode error.
    /// </summary>
    [pbr::OriginalName("SdkMsgDecodeBinaryWs")] SdkMsgDecodeBinaryWs = 10202,
    /// <summary>
    /// SDK not support long connection binary protocol.
    /// </summary>
    [pbr::OriginalName("SdkMsgBinaryTypeNotSupport")] SdkMsgBinaryTypeNotSupport = 10203,
    /// <summary>
    /// SDK message send repeat.
    /// </summary>
    [pbr::OriginalName("SdkMsgRepeat")] SdkMsgRepeat = 10204,
    /// <summary>
    /// SDK message content type not support.
    /// </summary>
    [pbr::OriginalName("SdkMsgContentTypeNotSupport")] SdkMsgContentTypeNotSupport = 10205,
    /// <summary>
    /// SDK message has no seq.
    /// </summary>
    [pbr::OriginalName("SdkMsgHasNoSeq")] SdkMsgHasNoSeq = 10206,
    /// <summary>
    /// SDK not support option.
    /// </summary>
    [pbr::OriginalName("SdkNotSupportOpt")] SdkNotSupportOpt = 10301,
    /// <summary>
    /// SDK not support type.
    /// </summary>
    [pbr::OriginalName("SdkNotSupportType")] SdkNotSupportType = 10302,
    /// <summary>
    /// SDK unread count error.
    /// </summary>
    [pbr::OriginalName("SdkUnreadCount")] SdkUnreadCount = 10303,
    /// <summary>
    /// SDK group id not found.
    /// </summary>
    [pbr::OriginalName("SdkGroupIDNotFound")] SdkGroupIdnotFound = 10400,
    /// <summary>
    /// SDK group type not error.
    /// </summary>
    [pbr::OriginalName("SdkGroupType")] SdkGroupType = 10401,
    /// <summary>
    /// Server userid not found.
    /// </summary>
    [pbr::OriginalName("SrvUserIDNotFound")] SrvUserIdnotFound = 1101,
    /// <summary>
    /// Server user registered already.
    /// </summary>
    [pbr::OriginalName("SrvRegisteredAlready")] SrvRegisteredAlready = 1102,
    /// <summary>
    /// Server group id not found.
    /// </summary>
    [pbr::OriginalName("SrvGroupIDNotFound")] SrvGroupIdnotFound = 1201,
    /// <summary>
    /// Server group id existed.
    /// </summary>
    [pbr::OriginalName("SrvGroupIDExisted")] SrvGroupIdexisted = 1202,
    /// <summary>
    /// Server not in group yet.
    /// </summary>
    [pbr::OriginalName("SrvNotInGroupYet")] SrvNotInGroupYet = 1203,
    /// <summary>
    /// Server dismissed.
    /// </summary>
    [pbr::OriginalName("SrvDismissedAlready")] SrvDismissedAlready = 1204,
    /// <summary>
    /// Server group type not support.
    /// </summary>
    [pbr::OriginalName("SrvGroupTypeNotSupport")] SrvGroupTypeNotSupport = 1205,
    /// <summary>
    /// Server request handled error, don't need repeat handle.
    /// </summary>
    [pbr::OriginalName("SrvGroupRequestHandled")] SrvGroupRequestHandled = 1206,
    /// <summary>
    /// Server can not add yourself to friend.
    /// </summary>
    [pbr::OriginalName("SrvCanNotAddYourself")] SrvCanNotAddYourself = 1301,
    /// <summary>
    /// Server blocked by other user error.
    /// </summary>
    [pbr::OriginalName("SrvBlockedByPeer")] SrvBlockedByPeer = 1302,
    /// <summary>
    /// Server not other user's friend.
    /// </summary>
    [pbr::OriginalName("SrvNotPeersFriend")] SrvNotPeersFriend = 1303,
    /// <summary>
    /// Server relationship already, don't need repeat request.
    /// </summary>
    [pbr::OriginalName("SrvRelationshipAlready")] SrvRelationshipAlready = 1304,
    /// <summary>
    /// Server message has read disable.
    /// </summary>
    [pbr::OriginalName("SrvMessageHasReadDisable")] SrvMessageHasReadDisable = 1401,
    /// <summary>
    /// Server you are muted in group.
    /// </summary>
    [pbr::OriginalName("SrvMutedInGroup")] SrvMutedInGroup = 1402,
    /// <summary>
    /// Server group has muted.
    /// </summary>
    [pbr::OriginalName("SrvMutedGroup")] SrvMutedGroup = 1403,
    /// <summary>
    /// Server message already revoke.
    /// </summary>
    [pbr::OriginalName("SrvMsgAlreadyRevoke")] SrvMsgAlreadyRevoke = 1404,
    /// <summary>
    /// Server connect over max num limit in gateway.
    /// </summary>
    [pbr::OriginalName("SrvConnOverMaxNumLimit")] SrvConnOverMaxNumLimit = 1601,
    /// <summary>
    /// Server connect args error.
    /// </summary>
    [pbr::OriginalName("SrvConnArgs")] SrvConnArgs = 1602,
    /// <summary>
    /// Server push message error.
    /// </summary>
    [pbr::OriginalName("SrvPushMsg")] SrvPushMsg = 1603,
    /// <summary>
    /// Server ios background push error.
    /// </summary>
    [pbr::OriginalName("SrvIOSBackgroundPush")] SrvIosbackgroundPush = 1604,
    /// <summary>
    /// Server file uploaded expired.
    /// </summary>
    [pbr::OriginalName("SrvFileUploadedExpired")] SrvFileUploadedExpired = 1701,
    /// <summary>
    /// Server database error.
    /// </summary>
    [pbr::OriginalName("SrvDatabase")] SrvDatabase = 90002,
    /// <summary>
    /// Server network error.
    /// </summary>
    [pbr::OriginalName("SrvNetwork")] SrvNetwork = 90004,
    /// <summary>
    /// Server data error.
    /// </summary>
    [pbr::OriginalName("SrvData")] SrvData = 90007,
    /// <summary>
    /// Server callback error.
    /// </summary>
    [pbr::OriginalName("SrvCallback")] SrvCallback = 80000,
  }

  #endregion

}

#endregion Designer generated code
